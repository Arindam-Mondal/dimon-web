{"version":3,"sources":["assets/images/Dimon_9.jpeg","assets/images/dimon-main.jpeg","assets/images/Dimon_1.jpeg","assets/images/Dimon_2.jpeg","assets/images/Dimon_3.jpeg","assets/images/Dimon_4.jpeg","assets/images/Dimon_5.jpeg","assets/images/Dimon_6.jpeg","assets/images/Dimon_7.jpeg","assets/images/Dimon_8.jpeg","assets/images/Dimon_10.jpeg","assets/images/Dimon_11.jpeg","components/dimon/dimon-header/DimonHeader.js","components/dimon/dimon-body/DimonTanks/DimonTank/DimonTank.js","components/dimon/dimon-body/DimonTanks/DimonTankImages.js","components/dimon/dimon-body/DimonTanks/DimonTanks.js","components/dimon/dimon-body/DimonBody.js","components/dimon/dimon-footer/DimonFooter.js","components/dimon/Dimon.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","DimonHeader","className","src","dimonImage","alt","DimonTank","props","dimonTankColor","DimonImages","image","DimonImage1","imageColor","DimonImage2","DimonImage3","DimonImage4","DimonImage5","DimonImage6","DimonImage7","DimonImage8","DimonImage9","DimonImage10","DimonImage11","DimonTanks","DimonTankImages","map","dimonTankImage","DimonBody","DimonFooter","class","Dimon","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,sC,kBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,+QCW5BC,EAPK,WAChB,OACI,yBAAKC,UAAW,UACZ,yBAAKC,IAAKC,IAAYC,IAAI,SAASH,UAAW,mBCM3CI,G,kBAVG,SAACC,GACf,OACI,oCACI,yBAAKL,UAAU,cACX,yBAAKC,IAAKI,EAAMH,WAAYC,IAAI,OAAOH,UAAU,sBAErD,yBAAKA,UAAU,oBAAoBK,EAAMC,mB,qLCoEtCC,EAjEK,CAChB,CACIC,MAAQC,IACRC,WAAY,eAEhB,CACIF,MAAQG,IACRD,WAAY,UAEhB,CACIF,MAAQI,IACRF,WAAY,SAEhB,CACIF,MAAQK,IACRH,WAAY,aAEhB,CACIF,MAAQM,IACRJ,WAAY,gBAEhB,CACIF,MAAQO,IACRL,WAAY,UAEhB,CACIF,MAAQQ,IACRN,WAAY,UAEhB,CACIF,MAAQS,IACRP,WAAY,aAEhB,CACIF,MAAQU,IACRR,WAAY,SAEhB,CACIF,MAAQW,IACRT,WAAY,cAEhB,CACIF,MAAQY,IACRV,WAAY,SAEhB,CACIF,MAAQU,IACRR,WAAY,UCxCLW,EAdI,SAAChB,GAChB,OACI,yBAAKL,UAAU,eACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,UAAS,4CAE5B,yBAAKA,UAAU,cACVsB,EAAgBC,KAAI,SAACC,GAClB,OAAO,yBAAKxB,UAAU,iCAAgC,kBAAC,EAAD,CAAWE,WAAYsB,EAAehB,MAAOF,eAAgBkB,EAAed,oBCFvIe,EAPG,SAACpB,GACf,OACI,yBAAKL,UAAU,cACX,kBAAC,EAAD,QCgBG0B,G,MApBK,WAChB,OACI,yBAAK1B,UAAU,UACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,kBAAf,0BACA,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SACX,uBAAG2B,MAAM,wBAEb,yBAAK3B,UAAU,UACX,yBAAKA,UAAU,mBAAf,oBACA,yBAAKA,UAAU,mBAAf,oBCEb4B,EAZD,WAEV,OACI,oCACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCGC,MARf,WACE,OACE,yBAAK7B,UAAU,OACb,kBAAC,EAAD,QCKc8B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.f99595a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Dimon_9.4f94f36d.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/dimon-main.dafd9d40.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Dimon_1.31ad8be1.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Dimon_2.c3317106.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Dimon_3.e26087a2.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Dimon_4.cb52a0e0.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Dimon_5.9bc46376.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Dimon_6.7a1fd151.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Dimon_7.abf3de46.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Dimon_8.62c7e96b.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Dimon_10.1950f87e.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Dimon_11.c3f5d494.jpeg\";","import React from 'react';\r\nimport './DimonHeader.css';\r\nimport dimonImage from '../../../assets/images/dimon-main.jpeg'\r\n\r\nconst DimonHeader = () => {\r\n    return (\r\n        <div className={\"header\"}>\r\n            <img src={dimonImage} alt=\"Nature\" className={\"header-image\"}/>\r\n        </div>\r\n    );\r\n}\r\nexport default DimonHeader;","import React from 'react';\r\nimport './DimonTank.css';\r\n\r\nconst DimonTank = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"dimon-tank\">\r\n                <img src={props.dimonImage} alt=\"tank\" className=\"dimon-tank-image\" />\r\n            </div>\r\n            <div className=\"dimon-tank-color\">{props.dimonTankColor}</div>\r\n        </>\r\n    );\r\n}\r\nexport default DimonTank;","import DimonImage1 from '../../../../assets/images/Dimon_1.jpeg'\r\nimport DimonImage2 from '../../../../assets/images/Dimon_2.jpeg'\r\nimport DimonImage3 from '../../../../assets/images/Dimon_3.jpeg'\r\nimport DimonImage4 from '../../../../assets/images/Dimon_4.jpeg'\r\nimport DimonImage5 from '../../../../assets/images/Dimon_5.jpeg'\r\nimport DimonImage6 from '../../../../assets/images/Dimon_6.jpeg'\r\nimport DimonImage7 from '../../../../assets/images/Dimon_7.jpeg'\r\nimport DimonImage8 from '../../../../assets/images/Dimon_8.jpeg'\r\nimport DimonImage9 from '../../../../assets/images/Dimon_9.jpeg'\r\nimport DimonImage10 from '../../../../assets/images/Dimon_10.jpeg'\r\nimport DimonImage11 from '../../../../assets/images/Dimon_11.jpeg'\r\n\r\nconst DimonImages = [\r\n    {\r\n        image : DimonImage1,\r\n        imageColor: \"Lovely Pink\"\r\n    },\r\n    {\r\n        image : DimonImage2,\r\n        imageColor: \"Violet\"\r\n    },\r\n    {\r\n        image : DimonImage3,\r\n        imageColor: \"Black\"\r\n    },\r\n    {\r\n        image : DimonImage4,\r\n        imageColor: \"Sea Green\"\r\n    },\r\n    {\r\n        image : DimonImage5,\r\n        imageColor: \"Parrot Green\"\r\n    },\r\n    {\r\n        image : DimonImage6,\r\n        imageColor: \"Orange\"\r\n    },\r\n    {\r\n        image : DimonImage7,\r\n        imageColor: \"Yellow\"\r\n    },\r\n    {\r\n        image : DimonImage8,\r\n        imageColor: \"Deep Blue\"\r\n    },\r\n    {\r\n        image : DimonImage9,\r\n        imageColor: \"White\"\r\n    },\r\n    {\r\n        image : DimonImage10,\r\n        imageColor: \"Royal Blue\"\r\n    },\r\n    {\r\n        image : DimonImage11,\r\n        imageColor: \"Green\"\r\n    },\r\n    {\r\n        image : DimonImage9,\r\n        imageColor: \"White\"\r\n    }\r\n]\r\n\r\n// export default [\r\n//     DimonImage1,\r\n//     DimonImage2,\r\n//     DimonImage3,\r\n//     DimonImage4,\r\n//     DimonImage5,\r\n//     DimonImage6,\r\n//     DimonImage7,\r\n//     DimonImage8,\r\n//     DimonImage9,\r\n//     DimonImage10,\r\n//     DimonImage11\r\n// ];\r\n\r\nexport default DimonImages;","import React from 'react';\r\nimport './DimonTanks.css';\r\nimport DimonTank from './DimonTank/DimonTank';\r\nimport DimonTankImages from './DimonTankImages'\r\n\r\nconst DimonTanks = (props) => {\r\n    return (\r\n        <div className=\"dimon-tanks\">\r\n            <div className=\"row tanks-heading\">\r\n                <div className=\"col-12\"><font>Products</font></div>\r\n            </div>\r\n            <div className=\"row images\">\r\n                {DimonTankImages.map((dimonTankImage) => {\r\n                    return <div className=\"col-4 col-md-2 dimon-tank-col\"><DimonTank dimonImage={dimonTankImage.image} dimonTankColor={dimonTankImage.imageColor} /></div>\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default DimonTanks;","import React from 'react';\r\nimport './DimonBody.css';\r\nimport DimonTanks from './DimonTanks/DimonTanks';\r\n\r\nconst DimonBody = (props) => {\r\n    return (\r\n        <div className=\"dimon-body\">\r\n            <DimonTanks/>\r\n        </div>\r\n    );\r\n}\r\nexport default DimonBody;","import React from 'react';\r\nimport './DimonFooter.css';\r\n\r\nconst DimonFooter = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"row footer-content\">\r\n                <div className=\"col-5 col-md-6\">&copy;Dimon Storage Tank</div>\r\n                <div className=\"col-7 col-md-6\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-1\">\r\n                            <i class=\"fa fa-address-book\"></i>\r\n                        </div>\r\n                        <div className=\"col-10\">\r\n                            <div className=\"col-12 col-md-6\">Jagannath Mondal</div>\r\n                            <div className=\"col-12 col-md-6\">987745258</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default DimonFooter;","import React from 'react';\r\nimport DimonHeader from './dimon-header/DimonHeader';\r\nimport DimonBody from './dimon-body/DimonBody';\r\nimport DimonFooter from './dimon-footer/DimonFooter';\r\n\r\nconst Dimon = () => {\r\n\r\n    return (\r\n        <>\r\n            <DimonHeader />\r\n            <DimonBody />\r\n            <DimonFooter/>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default Dimon;","import React from 'react';\nimport './App.css';\nimport Dimon from './components/dimon/Dimon';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dimon/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}